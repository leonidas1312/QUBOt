# docker-compose.yml

services:
  redis:
    image: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app-network

  backend:
    build:
      context: ./src/backend
      dockerfile: backend_dockerfile
    container_name: backend
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    volumes:
      - ./src/backend:/app
    ports:
      - "8000:8000"
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - redis
    networks:
      - app-network

  celery_worker:
    build:
      context: ./src/backend
      dockerfile: backend_dockerfile
    command: celery -A tasks.celery worker --loglevel=info
    volumes:
      - ./src/backend:/app
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - redis
      - backend
    networks:
      - app-network

  frontend:
    build:
      context: ./src/frontend
      dockerfile: frontend_dockerfile
    container_name: frontend
    ports:
      - "8080:8080"
    volumes:
      - ./src/frontend:/app
      - /app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
    depends_on:
      - backend
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  redis_data:
